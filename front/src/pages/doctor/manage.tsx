import Layout from "@md/components/layout";
import Head from "next/head";
import Navigation from "@md/components/navigation";
import { ManagePatients, RegisterTrain } from "@md/interfaces/manage.interface";
import { DoctorInfo } from "@md/interfaces/user.interface";
import Profile from "@md/components/profile";
import { useEffect, useState } from "react";
import ManageItem from "@md/components/manageItem";
import axiosClient from "@md/utils/axiosInstance";

// 의사가 진료하는 환자들을 확인할 수 있는 페이지
export default function Manage() {
    const [tabIdx, setTabIdx] = useState(0);

    const [loading, setLoading] = useState(false);
    const [info, setInfo] = useState<DoctorInfo>();
    const [resRegisterTrain, setResRegisterTrain] = useState<RegisterTrain[]>();
    const [resManageData, setResManageData] = useState<ManagePatients[]>();

    useEffect(() => {
        axiosClient.get('/api/user').then(response => {
            setInfo({
                _id: response.data._id,
                id: response.data.id,
                name: response.data.name,
                hospitalname: response.data.hospitalname,
            });
            setLoading(!loading);
        })
    }, []);

    useEffect(() => {
        if (info && tabIdx == 1 && !resManageData) {
            axiosClient.get('/api/patient_list').then(response => {
                setResManageData(response.data.data.map((item: ManagePatients) => {
                    return {
                        _id: item._id,
                        uid: item.uid,
                        patientName: item.patientName,
                        idx: item.idx,
                        trainCourse: item.trainCourse,
                        isCounseled: item.isCounseled,
                    }
                }));
            });
        }
    }, [loading, tabIdx]);

    useEffect(() => {
        if (info && tabIdx == 0) {
            axiosClient.get('/api/register_video').then(response => {
                setResRegisterTrain(response.data.data.map((item: any) => {
                    return {
                        _id: item._id,
                        trainTitle: item.type,
                        trainListLen: item.num,
                        typeIdx: item.idx,
                        video_info: item.video_info,
                    };
                }));
            });
        }
    }, [loading]);

    const handleRemove = (type: string, name: string) => {
        axiosClient.post("/api/file_delete", {type, name}).then((response) => {
            setLoading(!loading);
            alert("동영상 파일 삭제를 완료하였습니다.");
        }).catch((error) => {
            console.log(error);
            alert(error.response.data.detail);
        });
    }

    return (
        <div>
            <Head>
                <title>모션 닥터 | 의사 환자 관리페이지</title>
                <meta name="description" content="Generated by create next app"/>
                <meta name="viewport" content="width=device-width, initial-scale=1"/>
                <link rel="icon" href="/favicon.ico"/>
            </Head>
            <Navigation></Navigation>

            {
                tabIdx === 0 ?
                    <Profile doctorData={info!} manageData={null} registerTrain={resRegisterTrain!}/> :
                    <Profile doctorData={info!} manageData={resManageData!} registerTrain={null}/>
            }

            <Layout>

                <div
                    className="flex mb-8 gap-6 w-full pb-3 border-b-[1px] border-gray-300 justify-center drop-shadow-2xl">
                    <div className={`${tabIdx === 0 && "font-bold"} hover:font-bold`} onClick={() => setTabIdx(0)}>등록 재활
                        코스 목록
                    </div>
                    <div className={`${tabIdx === 1 && "font-bold"} hover:font-bold`} onClick={() => setTabIdx(1)}>진찰 환자
                        목록
                    </div>
                </div>

                {
                    tabIdx === 0 ? <ManageItem manageData={null} registerTrainData={resRegisterTrain!}
                                               handleRemove={handleRemove}/> :
                        <ManageItem manageData={resManageData!} registerTrainData={null} handleRemove={handleRemove}/>
                }
            </Layout>
        </div>
    );
};